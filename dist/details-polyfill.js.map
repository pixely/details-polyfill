{"version":3,"sources":["webpack:///webpack/bootstrap a17c8eb5e2936c0cf15b","webpack:///./src/details-polyfill.js"],"names":["Details","isDetailsSupported","document","createElement","css","injectStyles","style","id","textContent","replace","appendChild","createTextNode","head","insertBefore","firstChild","toggleOpen","parent","parentNode","tagName","toLowerCase","hasAttribute","removeAttribute","setAttribute","documentElement","classList","add","summaries","querySelectorAll","summary","addEventListener","e","key","which","keyCode","apply","target"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACtCA;;;;;;mBAMgB,SAASA,OAAT,GAAmB;AACjC;AACA,OAAMC,qBAAsB,UAAUC,SAASC,aAAT,CAAuB,SAAvB,CAAtC;;AAEA;AACA;AACA,OAAMC,osCAAN;;AA8CA;AACA;AACA,OAAMC,eAAe,SAAfA,YAAe,GAAM;AACzB,SAAMC,QAAQJ,SAASC,aAAT,CAAuB,OAAvB,CAAd;AACAG,WAAMC,EAAN,GAAW,sBAAX;AACAD,WAAME,WAAN,GAAoBJ,IACfK,OADe,CACP,iCADO,EAC4B,EAD5B,EAEfA,OAFe,CAEP,MAFO,EAEC,GAFD,CAApB;AAGAH,WAAMI,WAAN,CAAkBR,SAASS,cAAT,CAAwB,EAAxB,CAAlB;;AAEA;AACAT,cAASU,IAAT,CAAcC,YAAd,CAA2BP,KAA3B,EAAkCJ,SAASU,IAAT,CAAcE,UAAhD;AACA,YAAO,IAAP;AACD,IAXD;;AAaA,OAAMC,aAAa,SAASA,UAAT,GAAsB;AACvC,SAAMC,SAAS,KAAKC,UAApB;;AAEA,SAAID,OAAOE,OAAP,CAAeC,WAAf,OAAiC,SAArC,EAAgD;AAC9C,WAAIH,OAAOI,YAAP,CAAoB,MAApB,CAAJ,EAAiC;AAC/BJ,gBAAOK,eAAP,CAAuB,MAAvB;AACD,QAFD,MAEO;AACLL,gBAAOM,YAAP,CAAoB,MAApB,EAA4B,EAA5B;AACD;AACF;AACF,IAVD;;AAYA,OAAIrB,kBAAJ,EAAwB;AACtB;AACD;;AAED;AACAC,YAASqB,eAAT,CAAyBC,SAAzB,CAAmCC,GAAnC,CAAuC,YAAvC;;AAEA;AACApB;;AAEA;AACA,OAAMqB,YAAYxB,SAASyB,gBAAT,CAA0B,SAA1B,CAAlB;AACA,OAAIC,gBAAJ;;AAEA;AACA;AACA,OAAIF,SAAJ,EAAe;AAAA;AAAA;AAAA;;AAAA;AACb,4BAAgBA,SAAhB,8HAA2B;AAAtBE,gBAAsB;;AACzBA,iBAAQN,YAAR,CAAqB,MAArB,EAA6B,QAA7B;AACAM,iBAAQN,YAAR,CAAqB,UAArB,EAAiC,CAAjC;AACAM,iBAAQC,gBAAR,CAAyB,OAAzB,EAAkCd,UAAlC;AACAa,iBAAQC,gBAAR,CAAyB,UAAzB,EAAqC,UAACC,CAAD,EAAO;AAC1C,eAAMC,MAAMD,EAAEE,KAAF,IAAWF,EAAEG,OAAzB;AACA,eAAIF,QAAQ,EAAR,IAAcA,QAAQ,EAA1B,EAA8B;AAAE;AAC9BhB,wBAAWmB,KAAX,CAAiBJ,EAAEK,MAAnB;AACD;AACF,UALD;AAMD;AAXY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYd;AACF,EA5Ge,E","file":"/dist/details-polyfill.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a17c8eb5e2936c0cf15b","/**\n * Add support for details element for browsers which require it\n *\n * @author Graham Martin <graham@pixely.co.uk>\n */\n\nexport default (function Details() {\n  // Check for details element support\n  const isDetailsSupported = ('open' in document.createElement('details'));\n\n  // CSS used a lightly modified version of work by @jordanaustin\n  // https://github.com/jordanaustin/Details-Expander/blob/master/src/css/main.css\n  const css = `  \n    /*\n      NOTE:\n      These are defaults meant to mimic the default unstyled brower look.\n      I highly recommend you style your details tags but don't do it here.\n      Just overwrite the style. Almost everything can be fully customized.\n      Anything that shouldn't be overwritten has an !important on it.\n    */\n    \n    .no-details details {\n      display: block;\n      width: 100%;\n    }\n    \n    .no-details details > summary {\n      display: inline-block !important;\n      width: 100%  !important;\n      min-height: 1.4em;\n      padding: 0.125em;\n      cursor: pointer;\n    }\n    \n    .no-details details summary:before {\n      content:'►';\n      font-size: 0.8em;\n      position: relative;\n      display: inline-block;\n      width: 1em;\n      height: 1em;\n      margin-right: 0.3em;\n      transform-origin: 0.4em 0.6em;\n    }\n    \n    .no-details details[open] > summary:before {\n      content: '▼';\n    }\n    \n    .no-details details > *:not(summary) {\n      display: none;\n    }\n    \n    .no-details details[open] > *:not(summary) {\n      /* If you need to display table or something like that feel free */\n      display: block;\n    }`;\n\n  // injectStyles is based on work by @leifoolsen\n  // https://github.com/leifoolsen/lavu-details-polyfill/blob/master/src/index.js\n  const injectStyles = () => {\n    const style = document.createElement('style');\n    style.id = 'details-polyfill-css';\n    style.textContent = css\n        .replace(/(\\/\\*([^*]|(\\*+[^*/]))*\\*+\\/)/gm, '')\n        .replace(/\\s/gm, ' ');\n    style.appendChild(document.createTextNode(''));\n\n    // Must be the first stylesheet so it does not override user css\n    document.head.insertBefore(style, document.head.firstChild);\n    return true;\n  };\n\n  const toggleOpen = function toggleOpen() {\n    const parent = this.parentNode;\n\n    if (parent.tagName.toLowerCase() === 'details') {\n      if (parent.hasAttribute('open')) {\n        parent.removeAttribute('open');\n      } else {\n        parent.setAttribute('open', '');\n      }\n    }\n  };\n\n  if (isDetailsSupported) {\n    return;\n  }\n\n  // Add class to <html> element to hook our styles too\n  document.documentElement.classList.add('no-details');\n\n  // Inject basic details styling\n  injectStyles();\n\n  // Grab references to the detail DOM elements\n  const summaries = document.querySelectorAll('summary');\n  let summary;\n\n  // Iterate over all summary elements, set accessibility focused attributes and\n  // set event listeners for clicks or keypresses\n  if (summaries) {\n    for (summary of summaries) {\n      summary.setAttribute('role', 'button');\n      summary.setAttribute('tabindex', 0);\n      summary.addEventListener('click', toggleOpen);\n      summary.addEventListener('keypress', (e) => {\n        const key = e.which || e.keyCode;\n        if (key === 13 || key === 32) { // enter or space keys\n          toggleOpen.apply(e.target);\n        }\n      });\n    }\n  }\n}());\n\n\n\n// WEBPACK FOOTER //\n// ./src/details-polyfill.js"],"sourceRoot":""}